{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _server = require('react-dom/server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nrequire('./ReactBingmaps.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar map = {},\n    Microsoft,\n    infobox = {},\n    scriptURL = \"https://www.bing.com/api/maps/mapcontrol?callback=bingmapsCallback\",\n    pendingProps = [];\n\nvar ReactBingmaps = function (_Component) {\n  _inherits(ReactBingmaps, _Component);\n\n  function ReactBingmaps(props) {\n    _classCallCheck(this, ReactBingmaps);\n\n    var _this = _possibleConstructorReturn(this, (ReactBingmaps.__proto__ || Object.getPrototypeOf(ReactBingmaps)).call(this, props));\n\n    if (document.querySelector('script[src=\"' + scriptURL + '\"]') === null) {\n      _this.loadScript(scriptURL);\n\n      window.bingmapsCallback = function () {\n        Microsoft = window.Microsoft;\n        this.afterDependencyLoad(pendingProps);\n      }.bind(_this);\n    }\n\n    return _this;\n  }\n\n  _createClass(ReactBingmaps, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (Microsoft === null || Microsoft === undefined) {\n        pendingProps.push(this.props);\n      } else {\n        this.reactBingmaps(this.props, Microsoft);\n      }\n    }\n  }, {\n    key: 'afterDependencyLoad',\n    value: function afterDependencyLoad(pendingProps) {\n      var _this2 = this;\n\n      try {\n        pendingProps.map(function (props) {\n          return _this2.reactBingmaps(props, Microsoft);\n        });\n      } catch (exception) {\n        console.log(\"Error loading Microsoft bingmaps\");\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      try {\n        var mapReference = this.props.id ? '#' + this.props.id : '.react-bingmaps';\n        if (map[mapReference]) //map[mapReference].dispose();\n          map[mapReference] = undefined;\n        infobox = {};\n        pendingProps = [];\n      } catch (exception) {\n        console.log(exception);\n      }\n    }\n  }, {\n    key: 'loadScript',\n    value: function loadScript(url) {\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.async = true;\n      script.defer = true;\n      script.src = url;\n      document.getElementsByTagName(\"head\")[0].appendChild(script);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var mapReference = nextProps.id ? '#' + nextProps.id : '.react-bingmaps';\n\n      if (this.props.center.join() !== nextProps.center.join()) {\n        this.setMapCenter(nextProps.center, mapReference);\n      }\n\n      if (this.props.zoom !== nextProps.zoom) {\n        this.setMapZoom(nextProps.zoom, mapReference);\n      }\n\n      if (this.props.mapTypeId !== nextProps.mapTypeId) {\n        this.setMapTypeId(nextProps.mapTypeId, nextProps.center, nextProps.heading, mapReference);\n      }\n\n      if (this.props.navigationBarMode !== nextProps.navigationBarMode) {\n        this.setMapNavigationBarMode(nextProps.navigationBarMode, mapReference);\n      }\n\n      if (this.props.supportedMapTypes !== nextProps.supportedMapTypes) {\n        this.setMapSupportedMapTypes(nextProps.supportedMapTypes, mapReference);\n      }\n\n      if (this.props.disableStreetside !== nextProps.disableStreetside) {\n        this.setDisableStreetside(nextProps.disableStreetside, mapReference);\n      }\n\n      if (this.props.pushPins !== nextProps.pushPins) {\n        this.setPushPins(nextProps.pushPins, mapReference);\n      }\n\n      if (this.props.infoboxes !== nextProps.infoboxes) {\n        this.setInfoboxes(nextProps.infoboxes, \"infoboxes\", mapReference);\n      }\n\n      if (this.props.infoboxesWithPushPins !== nextProps.infoboxesWithPushPins) {\n        this.setInfoboxesWithPushPins(nextProps.infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n      }\n\n      if (this.props.regularPolygons !== nextProps.regularPolygons) {\n        this.createRegularPolygons(nextProps.regularPolygons, mapReference);\n      }\n\n      if (this.props.boundary !== nextProps.boundary) {\n        this.setBoundary(nextProps.boundary, mapReference);\n      }\n\n      if (this.props.mapOptions !== nextProps.mapOptions) {\n        this.setMapOptions(nextProps.mapOptions, mapReference);\n      }\n\n      if (this.props.polyline !== nextProps.polyline) {\n        this.setPolyline(nextProps.polyline, mapReference);\n      }\n\n      if (this.props.directions !== nextProps.directions) {\n        this.setDirections(nextProps.directions, mapReference);\n      }\n    }\n  }, {\n    key: 'reactBingmaps',\n    value: function reactBingmaps(props, Microsoft) {\n      var bingmapKey = props.bingmapKey,\n          center = props.center,\n          mapTypeId = props.mapTypeId,\n          zoom = props.zoom,\n          navigationBarMode = props.navigationBarMode,\n          supportedMapTypes = props.supportedMapTypes,\n          heading = props.heading,\n          pushPins = props.pushPins,\n          disableStreetside = props.disableStreetside,\n          infoboxes = props.infoboxes,\n          infoboxesWithPushPins = props.infoboxesWithPushPins,\n          getLocation = props.getLocation,\n          regularPolygons = props.regularPolygons,\n          boundary = props.boundary,\n          mapOptions = props.mapOptions,\n          polyline = props.polyline,\n          directions = props.directions,\n          mapHandlers = props.mapHandlers;\n\n      if (bingmapKey && Microsoft) {\n        var mapReference = props.id ? '#' + props.id : '.react-bingmaps';\n\n        if (!map[mapReference]) {\n          map[mapReference] = new Microsoft.Maps.Map(mapReference, {\n            credentials: bingmapKey\n          });\n        }\n\n        this.setMapCenter(center, mapReference);\n        this.setMapTypeId(mapTypeId, center, heading, mapReference);\n        this.setMapZoom(zoom, mapReference);\n        this.setMapNavigationBarMode(navigationBarMode, mapReference);\n        this.setMapSupportedMapTypes(supportedMapTypes, mapReference);\n        this.setDisableStreetside(disableStreetside, mapReference);\n        this.setPushPins(pushPins, mapReference);\n        this.setInfoboxes(infoboxes, \"infoboxes\", mapReference);\n        this.setInfoboxesWithPushPins(infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n        this.setGetLocation(getLocation, mapReference);\n        this.createRegularPolygons(regularPolygons, mapReference);\n        this.setBoundary(boundary, mapReference);\n        this.setMapOptions(mapOptions, mapReference);\n        this.setPolyline(polyline, mapReference);\n        this.setDirections(directions, mapReference);\n        this.setMapHandlers(mapHandlers, mapReference);\n      }\n    }\n  }, {\n    key: 'setMapCenter',\n    value: function setMapCenter(center, mapReference) {\n      if (map[mapReference] && center && center[0] && center[1]) {\n        map[mapReference].setView({\n          center: new Microsoft.Maps.Location(center[0], center[1])\n        });\n      }\n    }\n  }, {\n    key: 'setMapTypeId',\n    value: function setMapTypeId(mapTypeId, center, heading, mapReference) {\n      if (map[mapReference] && mapTypeId) {\n        var isBirdEyeAvailable = false;\n\n        if (mapTypeId === \"birdseye\" && center && center[0] && center[1]) {\n          var location = new Microsoft.Maps.Location(center[0], center[1]);\n          Microsoft.Maps.getIsBirdseyeAvailable(location, Microsoft.Maps.Heading[heading], function (onResponse) {\n            isBirdEyeAvailable = onResponse;\n          });\n        }\n\n        if (mapTypeId) {\n          map[mapReference].setView({\n            mapTypeId: isBirdEyeAvailable ? Microsoft.Maps.MapTypeId.birdseye : Microsoft.Maps.MapTypeId[mapTypeId]\n          });\n        }\n      }\n    }\n  }, {\n    key: 'setMapZoom',\n    value: function setMapZoom(zoom, mapReference) {\n      if (map[mapReference] && zoom) {\n        map[mapReference].setView({\n          zoom: zoom\n        });\n      }\n    }\n  }, {\n    key: 'setMapNavigationBarMode',\n    value: function setMapNavigationBarMode(navigationBarMode, mapReference) {\n      if (map[mapReference] && navigationBarMode) {\n        map[mapReference].setView({\n          navigationBarMode: navigationBarMode\n        });\n      }\n    }\n  }, {\n    key: 'setMapSupportedMapTypes',\n    value: function setMapSupportedMapTypes(supportedMapTypes, mapReference) {\n      if (map[mapReference] && supportedMapTypes) {\n        map[mapReference].setView({\n          supportedMapTypes: supportedMapTypes.map(function (id) {\n            return Microsoft.Maps.MapTypeId[id];\n          })\n        });\n      }\n    }\n  }, {\n    key: 'setDisableStreetside',\n    value: function setDisableStreetside(disableStreetside, mapReference) {\n      if (map[mapReference] && disableStreetside) {\n        map[mapReference].setView({\n          disableStreetside: disableStreetside\n        });\n      }\n    }\n  }, {\n    key: 'setPushPins',\n    value: function setPushPins(pushPins, mapReference) {\n      if (map[mapReference] && pushPins) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var pushpin = map[mapReference].entities.get(i);\n\n          if (pushpin instanceof Microsoft.Maps.Pushpin) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n\n        for (var pushPinIndex = 0; pushPinIndex < pushPins.length; pushPinIndex++) {\n          if (pushPins[pushPinIndex].location && pushPins[pushPinIndex].location[0] && pushPins[pushPinIndex].location[1]) {\n            var location = new Microsoft.Maps.Location(pushPins[pushPinIndex].location[0], pushPins[pushPinIndex].location[1]);\n            var option = pushPins[pushPinIndex].option ? pushPins[pushPinIndex].option : null;\n\n            if (option && option.anchor && option.anchor[0] && option.anchor[1]) {\n              option.anchor = new Microsoft.Maps.Point(option.anchor[0], option.anchor[1]);\n            }\n\n            var _pushpin = new Microsoft.Maps.Pushpin(location, option);\n\n            map[mapReference].entities.push(_pushpin);\n\n            if (pushPins[pushPinIndex].addHandler) {\n              Microsoft.Maps.Events.addHandler(_pushpin, pushPins[pushPinIndex].addHandler.type, function (callback, data) {\n                this.MakeCallback(callback, data);\n              }.bind(this, pushPins[pushPinIndex].addHandler.callback, pushPins[pushPinIndex].addHandler.callbackData));\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setInfoboxes',\n    value: function setInfoboxes(infoboxes, infoboxCreateType, mapReference) {\n      if (map[mapReference] && infoboxes) {\n        for (var i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n          infobox[infoboxCreateType][i].setMap(null);\n        }\n\n        infobox[infoboxCreateType] = [];\n\n        if (infoboxes) {\n          for (var infoboxIndex = 0; infoboxIndex < infoboxes.length; infoboxIndex++) {\n            if (infoboxes[infoboxIndex].location && infoboxes[infoboxIndex].location[0] && infoboxes[infoboxIndex].location[1]) {\n              var location = new Microsoft.Maps.Location(infoboxes[infoboxIndex].location[0], infoboxes[infoboxIndex].location[1]);\n              var option = infoboxes[infoboxIndex] ? infoboxes[infoboxIndex].option : null;\n\n              if (option.htmlContent) {\n                option.htmlContent = _server2.default.renderToStaticMarkup(option.htmlContent);\n              }\n\n              infobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, option));\n              infobox[infoboxCreateType][infoboxIndex].setMap(map[mapReference]);\n\n              if (infoboxes[infoboxIndex].addHandler) {\n                Microsoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxIndex], infoboxes[infoboxIndex].addHandler.type, function (callback, data) {\n                  this.MakeCallback(callback, data);\n                }.bind(this, infoboxes[infoboxIndex].addHandler.callback, infoboxes[infoboxIndex].addHandler.callbackData));\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setInfoboxesWithPushPins',\n    value: function setInfoboxesWithPushPins(infoboxesWithPushPins, infoboxCreateType, mapReference) {\n      if (map[mapReference] && infoboxesWithPushPins) {\n        //Remove existing Infoboxes\n        var i;\n\n        for (i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n          infobox[infoboxCreateType][i].setMap(null);\n        } //Remove existing Pushpins\n\n\n        for (i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var pushpin = map[mapReference].entities.get(i);\n\n          if (pushpin instanceof Microsoft.Maps.Pushpin) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n\n        infobox[infoboxCreateType] = []; //Add Infoboxes with Pushpins\n\n        if (infoboxesWithPushPins) {\n          for (var infoboxWithPushPinIndex = 0; infoboxWithPushPinIndex < infoboxesWithPushPins.length; infoboxWithPushPinIndex++) {\n            if (infoboxesWithPushPins[infoboxWithPushPinIndex].location) {\n              //Set Location\n              var location = new Microsoft.Maps.Location(infoboxesWithPushPins[infoboxWithPushPinIndex].location[0], infoboxesWithPushPins[infoboxWithPushPinIndex].location[1]); //Set Infobox Option\n\n              var infoboxOption = infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption : null; //ConvertToHtml if Obj\n\n              if (infoboxOption.htmlContent) {\n                infoboxOption.htmlContent = _server2.default.renderToStaticMarkup(infoboxOption.htmlContent);\n              } //If Handler added, initially hide Infobox\n\n\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n                infoboxOption[\"visible\"] = false;\n              } //Set Pushpin Option\n\n\n              var pushPinOption = infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption : null; //Initilize if anchor for Pushpin\n\n              if (pushPinOption.anchor && pushPinOption.anchor[0] && pushPinOption.anchor[1]) {\n                pushPinOption.anchor = new Microsoft.Maps.Point(pushPinOption.anchor[0], pushPinOption.anchor[1]);\n              } //Set Infobox\n\n\n              infobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, infoboxOption));\n              infobox[infoboxCreateType][infoboxWithPushPinIndex].setMap(map[mapReference]); //Set Infobox Callback if any\n\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler) {\n                Microsoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.type, function (callback, data) {\n                  this.MakeCallback(callback, data);\n                }.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callbackData));\n              } //Set Pushpin\t\t\t\t\n\n\n              var _pushpin2 = new Microsoft.Maps.Pushpin(location, pushPinOption);\n\n              map[mapReference].entities.push(_pushpin2); //Set Pushpin Callback if any\n\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler) {\n                Microsoft.Maps.Events.addHandler(_pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.type, function (callback, data) {\n                  this.MakeCallback(callback, data);\n                }.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callbackData));\n              } //Set InfoboxesWithPushPins handler if any\n\n\n              if (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n                this.setInfoboxesWithPushPinsHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], _pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setGetLocation',\n    value: function setGetLocation(getLocation, mapReference) {\n      if (map[mapReference] && getLocation) {\n        if (getLocation.addHandler) {\n          Microsoft.Maps.Events.addHandler(map[mapReference], getLocation.addHandler, function (callback, e) {\n            if (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n              var point = new Microsoft.Maps.Point(e.getX(), e.getY());\n              var location = e.target.tryPixelToLocation(point);\n              this.MakeCallback(callback, location);\n            } else {\n              this.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n            }\n          }.bind(this, getLocation.callback));\n        } else {\n          Microsoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n            if (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n              var point = new Microsoft.Maps.Point(e.getX(), e.getY());\n              var location = e.target.tryPixelToLocation(point);\n              this.MakeCallback(callback, location);\n            } else {\n              this.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n            }\n          }.bind(this, getLocation.callback));\n        }\n      }\n    }\n  }, {\n    key: 'setInfoboxesWithPushPinsHandler',\n    value: function setInfoboxesWithPushPinsHandler(infobox, pushpin, addHandler, mapReference) {\n      if (addHandler === \"mouseover\") {\n        Microsoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n          infobox.setOptions({\n            visible: true\n          });\n        });\n        Microsoft.Maps.Events.addHandler(pushpin, \"mouseout\", function () {\n          infobox.setOptions({\n            visible: false\n          });\n        });\n      } else {\n        Microsoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n          infobox.setOptions({\n            visible: true\n          });\n        });\n      }\n    }\n  }, {\n    key: 'MakeCallback',\n    value: function MakeCallback(callback, data, mapReference) {\n      data ? callback(data) : callback();\n    }\n  }, {\n    key: 'createRegularPolygons',\n    value: function createRegularPolygons(regularPolygons, mapReference) {\n      if (map[mapReference] && regularPolygons) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var regularPolygon = map[mapReference].entities.get(i);\n\n          if (regularPolygon instanceof Microsoft.Maps.Polygon) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n\n        for (var regularPolygonIndex = 0; regularPolygonIndex < regularPolygons.length; regularPolygonIndex++) {\n          if (regularPolygons[regularPolygonIndex].center && regularPolygons[regularPolygonIndex].center[0] && regularPolygons[regularPolygonIndex].center[1]) {\n            (function () {\n              var location = new Microsoft.Maps.Location(regularPolygons[regularPolygonIndex].center[0], regularPolygons[regularPolygonIndex].center[1]);\n              var radius = regularPolygons[regularPolygonIndex].radius ? regularPolygons[regularPolygonIndex].radius : 0;\n              var points = regularPolygons[regularPolygonIndex].points ? regularPolygons[regularPolygonIndex].points : 0;\n              var option = regularPolygons[regularPolygonIndex].option ? regularPolygons[regularPolygonIndex].option : {};\n              Microsoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function () {\n                var locations = Microsoft.Maps.SpatialMath.getRegularPolygon(location, radius, points, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);\n                var polygon = new Microsoft.Maps.Polygon(locations, option);\n                map[mapReference].entities.push(polygon);\n              });\n            })();\n          }\n        }\n      }\n    }\n  }, {\n    key: 'setBoundary',\n    value: function setBoundary(boundary, mapReference) {\n      if (map[mapReference] && boundary) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var regularPolygon = map[mapReference].entities.get(i);\n\n          if (regularPolygon instanceof Microsoft.Maps.Polygon) {\n            map[mapReference].entities.removeAt(i);\n          }\n        } // var boundaryLocation;\n        // if(boundary.option && \n        // \tboundary.option.entityType && \n        // \t\t!(boundary.option.entityType.includes(\"Postcode\"))){\n        // \tboundaryLocation = new Microsoft.Maps.Location(boundary.location[0], boundary.location[1]);\n        // }\n        // else{\n        // \tboundaryLocation = boundary.location\n        // }\n\n\n        var boundaryLocation = boundary.location ? boundary.location : null;\n        var geoDataRequestOptions = boundary.option ? boundary.option : {};\n        var polygonStyle = boundary.polygonStyle ? boundary.polygonStyle : null;\n        var search = boundary.search ? boundary.search : null;\n\n        if (!search && boundaryLocation) {\n          Microsoft.Maps.loadModule('Microsoft.Maps.SpatialDataService', function () {\n            Microsoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(boundaryLocation, geoDataRequestOptions, map[mapReference], function (data) {\n              if (data.results && data.results.length > 0) {\n                map[mapReference].entities.push(data.results[0].Polygons);\n              }\n            }, polygonStyle, function errCallback(networkStatus, statusMessage) {\n              console.log(networkStatus);\n              console.log(statusMessage);\n            });\n          });\n        } else {\n          Microsoft.Maps.loadModule(['Microsoft.Maps.SpatialDataService', 'Microsoft.Maps.Search'], function () {\n            var searchManager = new Microsoft.Maps.Search.SearchManager(map[mapReference]);\n            var geocodeRequest = {\n              where: search,\n              callback: function callback(geocodeResult) {\n                if (geocodeResult && geocodeResult.results && geocodeResult.results.length > 0) {\n                  map[mapReference].setView({\n                    bounds: geocodeResult.results[0].bestView\n                  });\n                  Microsoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(geocodeResult.results[0].location, geoDataRequestOptions, map[mapReference], function (data) {\n                    if (data.results && data.results.length > 0) {\n                      map[mapReference].entities.push(data.results[0].Polygons);\n                    }\n                  }, polygonStyle, function errCallback(networkStatus, statusMessage) {\n                    console.log(networkStatus);\n                    console.log(statusMessage);\n                  });\n                }\n              }\n            };\n            searchManager.geocode(geocodeRequest);\n          });\n        }\n      }\n    }\n  }, {\n    key: 'setMapOptions',\n    value: function setMapOptions(mapOptions, mapReference) {\n      if (map[mapReference] && mapOptions) {\n        map[mapReference].setOptions(mapOptions);\n      }\n    }\n  }, {\n    key: 'setPolyline',\n    value: function setPolyline(polyline, mapReference) {\n      if (map[mapReference] && polyline) {\n        for (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n          var ref = map[mapReference].entities.get(i);\n\n          if (ref instanceof Microsoft.Maps.Polyline) {\n            map[mapReference].entities.removeAt(i);\n          }\n        }\n\n        var polylineLocations = polyline.location ? polyline.location : null;\n        var polylineOption = polyline.option ? polyline.option : null;\n        var polylineLocationsAsMapLocations = [];\n\n        for (var polylineLocationIndex = 0; polylineLocationIndex < polylineLocations.length && polylineLocations[polylineLocationIndex][0] && polylineLocations[polylineLocationIndex][1]; polylineLocationIndex++) {\n          polylineLocationsAsMapLocations.push(new Microsoft.Maps.Location(polylineLocations[polylineLocationIndex][0], polylineLocations[polylineLocationIndex][1]));\n        }\n\n        if (polylineLocationsAsMapLocations.length !== 0) {\n          var polylineObject = new Microsoft.Maps.Polyline(polylineLocationsAsMapLocations, polylineOption);\n          map[mapReference].entities.push(polylineObject);\n        }\n      }\n    }\n  }, {\n    key: 'setDirections',\n    value: function setDirections(directions, mapReference) {\n      if (map[mapReference] && directions) {\n        var inputPanel = directions.inputPanel ? directions.inputPanel : null;\n        var renderOptions = directions.renderOptions ? directions.renderOptions : null;\n        var requestOptions = directions.requestOptions ? directions.requestOptions : null;\n        var wayPoints = directions.wayPoints ? directions.wayPoints : [];\n        var wayPointsAsDirection = [];\n        Microsoft.Maps.loadModule('Microsoft.Maps.Directions', function () {\n          var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map[mapReference]);\n          directionsManager.clearAll();\n\n          if (inputPanel) {\n            directionsManager.showInputPanel(inputPanel);\n          }\n\n          if (renderOptions) {\n            if (renderOptions.itineraryContainer) {\n              renderOptions.itineraryContainer = document.getElementById(renderOptions.itineraryContainer);\n            }\n\n            directionsManager.setRenderOptions(renderOptions);\n          }\n\n          if (requestOptions) {\n            var distanceUnit = requestOptions.distanceUnit ? Microsoft.Maps.Directions.DistanceUnit[requestOptions.distanceUnit] : null;\n            var routeMode = requestOptions.routeMode ? Microsoft.Maps.Directions.RouteMode[requestOptions.routeMode] : null;\n            var routeAvoidance = requestOptions.routeAvoidance ? Microsoft.Maps.Directions.RouteAvoidance[requestOptions.routeAvoidance] : null;\n            var routeOptimization = requestOptions.routeOptimization ? Microsoft.Maps.Directions.RouteOptimization[requestOptions.routeOptimization] : null;\n            var timeType = requestOptions.timeType ? Microsoft.Maps.Directions.TimeTypes[requestOptions.timeType] : null;\n            var vehicleSpec = requestOptions.vehicleSpec ? requestOptions.vehicleSpec : null;\n            var maxRoutes = requestOptions.maxRoutes ? requestOptions.maxRoutes : null;\n            var routeDraggable = requestOptions.routeDraggable ? requestOptions.routeDraggable : null;\n            var routeIndex = requestOptions.routeIndex ? requestOptions.routeIndex : null;\n            var time = requestOptions.time ? requestOptions.time : null;\n            directionsManager.setRequestOptions(Object.assign({}, distanceUnit && {\n              distanceUnit: distanceUnit\n            }, maxRoutes && {\n              maxRoutes: maxRoutes\n            }, routeMode && {\n              routeMode: routeMode\n            }, routeAvoidance && {\n              routeAvoidance: routeAvoidance\n            }, routeOptimization && {\n              routeOptimization: routeOptimization\n            }, timeType && {\n              timeType: timeType\n            }, vehicleSpec && {\n              vehicleSpec: vehicleSpec\n            }, routeDraggable && {\n              routeDraggable: routeDraggable\n            }, routeIndex && {\n              routeIndex: routeIndex\n            }, time && {\n              time: time\n            }));\n          }\n\n          for (var wayPointsIndex = 0; wayPointsIndex < wayPoints.length; wayPointsIndex++) {\n            var address = wayPoints[wayPointsIndex].address ? wayPoints[wayPointsIndex].address : null;\n            var location = wayPoints[wayPointsIndex].location && wayPoints[wayPointsIndex].location[0] && wayPoints[wayPointsIndex].location[1] ? new Microsoft.Maps.Location(wayPoints[wayPointsIndex].location[0], wayPoints[wayPointsIndex].location[1]) : null;\n            var isViaPoint = wayPoints[wayPointsIndex].isViaPoint ? wayPoints[wayPointsIndex].isViaPoint : null;\n            wayPointsAsDirection.push(new Microsoft.Maps.Directions.Waypoint({\n              address: address,\n              location: location,\n              isViaPoint: isViaPoint\n            }));\n          }\n\n          if (wayPointsAsDirection.length !== 0) {\n            for (var wayPointsAsDirectionIndex = 0; wayPointsAsDirectionIndex < wayPointsAsDirection.length; wayPointsAsDirectionIndex++) {\n              directionsManager.addWaypoint(wayPointsAsDirection[wayPointsAsDirectionIndex]);\n            }\n\n            directionsManager.calculateDirections();\n          }\n        });\n      }\n    }\n  }, {\n    key: 'setMapHandlers',\n    value: function setMapHandlers(mapHandlers, mapReference) {\n      if (map[mapReference] && mapHandlers) {\n        for (var mapHandlerIndex = 0; mapHandlerIndex < mapHandlers.length; mapHandlerIndex++) {\n          var mapHandler = mapHandlers[mapHandlerIndex];\n\n          if (mapHandler.addHandler) {\n            Microsoft.Maps.Events.addHandler(map[mapReference], mapHandler.addHandler, function (callback, e) {\n              var callbackData = {\n                event: e,\n                map: map[mapReference]\n              };\n              this.MakeCallback(callback, callbackData);\n            }.bind(this, mapHandler.callback));\n          } else {\n            Microsoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n              var callbackData = {\n                event: e,\n                map: map[mapReference]\n              };\n              this.MakeCallback(callback, callbackData);\n            }.bind(this, mapHandler.callback));\n          }\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        id: this.props.id,\n        className: (0, _classnames2.default)('react-bingmaps', this.props.className)\n      });\n    }\n  }]);\n\n  return ReactBingmaps;\n}(_react.Component);\n\nexports.default = ReactBingmaps;\nReactBingmaps.propTypes = {\n  bingmapKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  center: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  mapTypeId: _propTypes2.default.string,\n  navigationBarMode: _propTypes2.default.string,\n  supportedMapTypes: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  heading: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  zoom: _propTypes2.default.number,\n  pushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    option: _propTypes2.default.object,\n    addHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    })\n  })),\n  disableStreetside: _propTypes2.default.bool,\n  infoboxes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    option: _propTypes2.default.object,\n    addHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    })\n  })),\n  infoboxesWithPushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    addHandler: _propTypes2.default.string,\n    infoboxOption: _propTypes2.default.object,\n    pushPinOption: _propTypes2.default.object,\n    infoboxAddHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    }),\n    pushPinAddHandler: _propTypes2.default.shape({\n      \"type\": _propTypes2.default.string,\n      \"callback\": _propTypes2.default.func\n    })\n  })),\n  getLocation: _propTypes2.default.object,\n  regularPolygons: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    center: _propTypes2.default.arrayOf(_propTypes2.default.number),\n    radius: _propTypes2.default.number,\n    points: _propTypes2.default.number,\n    option: _propTypes2.default.object\n  })),\n  boundary: _propTypes2.default.shape({\n    location: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n    option: _propTypes2.default.object,\n    polygonStyle: _propTypes2.default.object,\n    search: _propTypes2.default.string\n  }),\n  mapOptions: _propTypes2.default.object,\n  polyline: _propTypes2.default.shape({\n    location: _propTypes2.default.arrayOf(_propTypes2.default.arrayOf(_propTypes2.default.number)),\n    option: _propTypes2.default.object\n  }),\n  directions: _propTypes2.default.object,\n  mapHandlers: _propTypes2.default.arrayOf(_propTypes2.default.object)\n};\nReactBingmaps.defaultProps = {\n  bingmapKey: undefined,\n  center: undefined,\n  mapTypeId: undefined,\n  navigationBarMode: undefined,\n  supportedMapTypes: undefined,\n  heading: 0,\n  pushPins: undefined,\n  disableStreetside: true,\n  infoboxes: undefined,\n  infoboxesWithPushPins: undefined,\n  zoom: undefined,\n  getLocation: undefined,\n  regularPolygons: undefined,\n  boundary: undefined,\n  mapOptions: undefined,\n  polyline: undefined,\n  directions: undefined,\n  mapHandlers: undefined\n};","map":{"version":3,"sources":["/home/gregorio/Workspaces/react_projects/node_modules/react-bingmaps/lib/components/ReactBingmaps/ReactBingmaps.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_classnames","_classnames2","_propTypes","_propTypes2","_server","_server2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","map","Microsoft","infobox","scriptURL","pendingProps","ReactBingmaps","_Component","_this","getPrototypeOf","document","querySelector","loadScript","window","bingmapsCallback","afterDependencyLoad","bind","componentDidMount","undefined","push","reactBingmaps","_this2","exception","console","log","componentWillUnmount","mapReference","id","url","script","createElement","type","async","defer","src","getElementsByTagName","appendChild","componentWillReceiveProps","nextProps","center","join","setMapCenter","zoom","setMapZoom","mapTypeId","setMapTypeId","heading","navigationBarMode","setMapNavigationBarMode","supportedMapTypes","setMapSupportedMapTypes","disableStreetside","setDisableStreetside","pushPins","setPushPins","infoboxes","setInfoboxes","infoboxesWithPushPins","setInfoboxesWithPushPins","regularPolygons","createRegularPolygons","boundary","setBoundary","mapOptions","setMapOptions","polyline","setPolyline","directions","setDirections","bingmapKey","getLocation","mapHandlers","Maps","Map","credentials","setGetLocation","setMapHandlers","setView","Location","isBirdEyeAvailable","location","getIsBirdseyeAvailable","Heading","onResponse","MapTypeId","birdseye","entities","getLength","pushpin","get","Pushpin","removeAt","pushPinIndex","option","anchor","Point","_pushpin","addHandler","Events","callback","data","MakeCallback","callbackData","infoboxCreateType","setMap","infoboxIndex","htmlContent","renderToStaticMarkup","Infobox","infoboxWithPushPinIndex","infoboxOption","pushPinOption","infoboxAddHandler","_pushpin2","pushPinAddHandler","setInfoboxesWithPushPinsHandler","e","getX","getY","point","tryPixelToLocation","setOptions","visible","regularPolygon","Polygon","regularPolygonIndex","radius","points","loadModule","locations","SpatialMath","getRegularPolygon","DistanceUnits","Miles","polygon","boundaryLocation","geoDataRequestOptions","polygonStyle","search","SpatialDataService","GeoDataAPIManager","getBoundary","results","Polygons","errCallback","networkStatus","statusMessage","searchManager","Search","SearchManager","geocodeRequest","where","geocodeResult","bounds","bestView","geocode","ref","Polyline","polylineLocations","polylineOption","polylineLocationsAsMapLocations","polylineLocationIndex","polylineObject","inputPanel","renderOptions","requestOptions","wayPoints","wayPointsAsDirection","directionsManager","Directions","DirectionsManager","clearAll","showInputPanel","itineraryContainer","getElementById","setRenderOptions","distanceUnit","DistanceUnit","routeMode","RouteMode","routeAvoidance","RouteAvoidance","routeOptimization","RouteOptimization","timeType","TimeTypes","vehicleSpec","maxRoutes","routeDraggable","routeIndex","time","setRequestOptions","assign","wayPointsIndex","address","isViaPoint","Waypoint","wayPointsAsDirectionIndex","addWaypoint","calculateDirections","mapHandlerIndex","mapHandler","event","render","className","Component","propTypes","oneOfType","string","number","arrayOf","shape","object","func","bool","defaultProps"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _server = require('react-dom/server');\n\nvar _server2 = _interopRequireDefault(_server);\n\nrequire('./ReactBingmaps.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar map = {},\n    Microsoft,\n    infobox = {},\n    scriptURL = \"https://www.bing.com/api/maps/mapcontrol?callback=bingmapsCallback\",\n    pendingProps = [];\n\nvar ReactBingmaps = function (_Component) {\n\t_inherits(ReactBingmaps, _Component);\n\n\tfunction ReactBingmaps(props) {\n\t\t_classCallCheck(this, ReactBingmaps);\n\n\t\tvar _this = _possibleConstructorReturn(this, (ReactBingmaps.__proto__ || Object.getPrototypeOf(ReactBingmaps)).call(this, props));\n\n\t\tif (document.querySelector('script[src=\"' + scriptURL + '\"]') === null) {\n\t\t\t_this.loadScript(scriptURL);\n\t\t\twindow.bingmapsCallback = function () {\n\t\t\t\tMicrosoft = window.Microsoft;\n\t\t\t\tthis.afterDependencyLoad(pendingProps);\n\t\t\t}.bind(_this);\n\t\t}\n\t\treturn _this;\n\t}\n\n\t_createClass(ReactBingmaps, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tif (Microsoft === null || Microsoft === undefined) {\n\t\t\t\tpendingProps.push(this.props);\n\t\t\t} else {\n\t\t\t\tthis.reactBingmaps(this.props, Microsoft);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'afterDependencyLoad',\n\t\tvalue: function afterDependencyLoad(pendingProps) {\n\t\t\tvar _this2 = this;\n\n\t\t\ttry {\n\t\t\t\tpendingProps.map(function (props) {\n\t\t\t\t\treturn _this2.reactBingmaps(props, Microsoft);\n\t\t\t\t});\n\t\t\t} catch (exception) {\n\t\t\t\tconsole.log(\"Error loading Microsoft bingmaps\");\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\ttry {\n\t\t\t\tvar mapReference = this.props.id ? '#' + this.props.id : '.react-bingmaps';\n\t\t\t\tif (map[mapReference])\n\t\t\t\t\t//map[mapReference].dispose();\n\n\t\t\t\t\tmap[mapReference] = undefined;\n\t\t\t\tinfobox = {};\n\t\t\t\tpendingProps = [];\n\t\t\t} catch (exception) {\n\t\t\t\tconsole.log(exception);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'loadScript',\n\t\tvalue: function loadScript(url) {\n\t\t\tvar script = document.createElement(\"script\");\n\t\t\tscript.type = \"text/javascript\";\n\t\t\tscript.async = true;\n\t\t\tscript.defer = true;\n\t\t\tscript.src = url;\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar mapReference = nextProps.id ? '#' + nextProps.id : '.react-bingmaps';\n\t\t\tif (this.props.center.join() !== nextProps.center.join()) {\n\t\t\t\tthis.setMapCenter(nextProps.center, mapReference);\n\t\t\t}\n\t\t\tif (this.props.zoom !== nextProps.zoom) {\n\t\t\t\tthis.setMapZoom(nextProps.zoom, mapReference);\n\t\t\t}\n\t\t\tif (this.props.mapTypeId !== nextProps.mapTypeId) {\n\t\t\t\tthis.setMapTypeId(nextProps.mapTypeId, nextProps.center, nextProps.heading, mapReference);\n\t\t\t}\n\t\t\tif (this.props.navigationBarMode !== nextProps.navigationBarMode) {\n\t\t\t\tthis.setMapNavigationBarMode(nextProps.navigationBarMode, mapReference);\n\t\t\t}\n\t\t\tif (this.props.supportedMapTypes !== nextProps.supportedMapTypes) {\n\t\t\t\tthis.setMapSupportedMapTypes(nextProps.supportedMapTypes, mapReference);\n\t\t\t}\n\t\t\tif (this.props.disableStreetside !== nextProps.disableStreetside) {\n\t\t\t\tthis.setDisableStreetside(nextProps.disableStreetside, mapReference);\n\t\t\t}\n\t\t\tif (this.props.pushPins !== nextProps.pushPins) {\n\t\t\t\tthis.setPushPins(nextProps.pushPins, mapReference);\n\t\t\t}\n\t\t\tif (this.props.infoboxes !== nextProps.infoboxes) {\n\t\t\t\tthis.setInfoboxes(nextProps.infoboxes, \"infoboxes\", mapReference);\n\t\t\t}\n\t\t\tif (this.props.infoboxesWithPushPins !== nextProps.infoboxesWithPushPins) {\n\t\t\t\tthis.setInfoboxesWithPushPins(nextProps.infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n\t\t\t}\n\t\t\tif (this.props.regularPolygons !== nextProps.regularPolygons) {\n\t\t\t\tthis.createRegularPolygons(nextProps.regularPolygons, mapReference);\n\t\t\t}\n\t\t\tif (this.props.boundary !== nextProps.boundary) {\n\t\t\t\tthis.setBoundary(nextProps.boundary, mapReference);\n\t\t\t}\n\t\t\tif (this.props.mapOptions !== nextProps.mapOptions) {\n\t\t\t\tthis.setMapOptions(nextProps.mapOptions, mapReference);\n\t\t\t}\n\t\t\tif (this.props.polyline !== nextProps.polyline) {\n\t\t\t\tthis.setPolyline(nextProps.polyline, mapReference);\n\t\t\t}\n\t\t\tif (this.props.directions !== nextProps.directions) {\n\t\t\t\tthis.setDirections(nextProps.directions, mapReference);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reactBingmaps',\n\t\tvalue: function reactBingmaps(props, Microsoft) {\n\t\t\tvar bingmapKey = props.bingmapKey,\n\t\t\t    center = props.center,\n\t\t\t    mapTypeId = props.mapTypeId,\n\t\t\t    zoom = props.zoom,\n\t\t\t    navigationBarMode = props.navigationBarMode,\n\t\t\t    supportedMapTypes = props.supportedMapTypes,\n\t\t\t    heading = props.heading,\n\t\t\t    pushPins = props.pushPins,\n\t\t\t    disableStreetside = props.disableStreetside,\n\t\t\t    infoboxes = props.infoboxes,\n\t\t\t    infoboxesWithPushPins = props.infoboxesWithPushPins,\n\t\t\t    getLocation = props.getLocation,\n\t\t\t    regularPolygons = props.regularPolygons,\n\t\t\t    boundary = props.boundary,\n\t\t\t    mapOptions = props.mapOptions,\n\t\t\t    polyline = props.polyline,\n\t\t\t    directions = props.directions,\n\t\t\t    mapHandlers = props.mapHandlers;\n\n\t\t\tif (bingmapKey && Microsoft) {\n\t\t\t\tvar mapReference = props.id ? '#' + props.id : '.react-bingmaps';\n\t\t\t\tif (!map[mapReference]) {\n\t\t\t\t\tmap[mapReference] = new Microsoft.Maps.Map(mapReference, {\n\t\t\t\t\t\tcredentials: bingmapKey\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setMapCenter(center, mapReference);\n\t\t\t\tthis.setMapTypeId(mapTypeId, center, heading, mapReference);\n\t\t\t\tthis.setMapZoom(zoom, mapReference);\n\t\t\t\tthis.setMapNavigationBarMode(navigationBarMode, mapReference);\n\t\t\t\tthis.setMapSupportedMapTypes(supportedMapTypes, mapReference);\n\t\t\t\tthis.setDisableStreetside(disableStreetside, mapReference);\n\t\t\t\tthis.setPushPins(pushPins, mapReference);\n\t\t\t\tthis.setInfoboxes(infoboxes, \"infoboxes\", mapReference);\n\t\t\t\tthis.setInfoboxesWithPushPins(infoboxesWithPushPins, \"infoboxesWithPushPins\", mapReference);\n\t\t\t\tthis.setGetLocation(getLocation, mapReference);\n\t\t\t\tthis.createRegularPolygons(regularPolygons, mapReference);\n\t\t\t\tthis.setBoundary(boundary, mapReference);\n\t\t\t\tthis.setMapOptions(mapOptions, mapReference);\n\t\t\t\tthis.setPolyline(polyline, mapReference);\n\t\t\t\tthis.setDirections(directions, mapReference);\n\t\t\t\tthis.setMapHandlers(mapHandlers, mapReference);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapCenter',\n\t\tvalue: function setMapCenter(center, mapReference) {\n\t\t\tif (map[mapReference] && center && center[0] && center[1]) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tcenter: new Microsoft.Maps.Location(center[0], center[1])\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapTypeId',\n\t\tvalue: function setMapTypeId(mapTypeId, center, heading, mapReference) {\n\t\t\tif (map[mapReference] && mapTypeId) {\n\t\t\t\tvar isBirdEyeAvailable = false;\n\t\t\t\tif (mapTypeId === \"birdseye\" && center && center[0] && center[1]) {\n\t\t\t\t\tvar location = new Microsoft.Maps.Location(center[0], center[1]);\n\t\t\t\t\tMicrosoft.Maps.getIsBirdseyeAvailable(location, Microsoft.Maps.Heading[heading], function (onResponse) {\n\t\t\t\t\t\tisBirdEyeAvailable = onResponse;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (mapTypeId) {\n\t\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\t\tmapTypeId: isBirdEyeAvailable ? Microsoft.Maps.MapTypeId.birdseye : Microsoft.Maps.MapTypeId[mapTypeId]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapZoom',\n\t\tvalue: function setMapZoom(zoom, mapReference) {\n\t\t\tif (map[mapReference] && zoom) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tzoom: zoom\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapNavigationBarMode',\n\t\tvalue: function setMapNavigationBarMode(navigationBarMode, mapReference) {\n\t\t\tif (map[mapReference] && navigationBarMode) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tnavigationBarMode: navigationBarMode\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapSupportedMapTypes',\n\t\tvalue: function setMapSupportedMapTypes(supportedMapTypes, mapReference) {\n\t\t\tif (map[mapReference] && supportedMapTypes) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tsupportedMapTypes: supportedMapTypes.map(function (id) {\n\t\t\t\t\t\treturn Microsoft.Maps.MapTypeId[id];\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setDisableStreetside',\n\t\tvalue: function setDisableStreetside(disableStreetside, mapReference) {\n\t\t\tif (map[mapReference] && disableStreetside) {\n\t\t\t\tmap[mapReference].setView({\n\t\t\t\t\tdisableStreetside: disableStreetside\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setPushPins',\n\t\tvalue: function setPushPins(pushPins, mapReference) {\n\t\t\tif (map[mapReference] && pushPins) {\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar pushpin = map[mapReference].entities.get(i);\n\t\t\t\t\tif (pushpin instanceof Microsoft.Maps.Pushpin) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var pushPinIndex = 0; pushPinIndex < pushPins.length; pushPinIndex++) {\n\t\t\t\t\tif (pushPins[pushPinIndex].location && pushPins[pushPinIndex].location[0] && pushPins[pushPinIndex].location[1]) {\n\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(pushPins[pushPinIndex].location[0], pushPins[pushPinIndex].location[1]);\n\t\t\t\t\t\tvar option = pushPins[pushPinIndex].option ? pushPins[pushPinIndex].option : null;\n\t\t\t\t\t\tif (option && option.anchor && option.anchor[0] && option.anchor[1]) {\n\t\t\t\t\t\t\toption.anchor = new Microsoft.Maps.Point(option.anchor[0], option.anchor[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar _pushpin = new Microsoft.Maps.Pushpin(location, option);\n\t\t\t\t\t\tmap[mapReference].entities.push(_pushpin);\n\t\t\t\t\t\tif (pushPins[pushPinIndex].addHandler) {\n\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(_pushpin, pushPins[pushPinIndex].addHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t}.bind(this, pushPins[pushPinIndex].addHandler.callback, pushPins[pushPinIndex].addHandler.callbackData));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setInfoboxes',\n\t\tvalue: function setInfoboxes(infoboxes, infoboxCreateType, mapReference) {\n\t\t\tif (map[mapReference] && infoboxes) {\n\t\t\t\tfor (var i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n\t\t\t\t\tinfobox[infoboxCreateType][i].setMap(null);\n\t\t\t\t}\n\t\t\t\tinfobox[infoboxCreateType] = [];\n\t\t\t\tif (infoboxes) {\n\t\t\t\t\tfor (var infoboxIndex = 0; infoboxIndex < infoboxes.length; infoboxIndex++) {\n\t\t\t\t\t\tif (infoboxes[infoboxIndex].location && infoboxes[infoboxIndex].location[0] && infoboxes[infoboxIndex].location[1]) {\n\t\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(infoboxes[infoboxIndex].location[0], infoboxes[infoboxIndex].location[1]);\n\t\t\t\t\t\t\tvar option = infoboxes[infoboxIndex] ? infoboxes[infoboxIndex].option : null;\n\t\t\t\t\t\t\tif (option.htmlContent) {\n\t\t\t\t\t\t\t\toption.htmlContent = _server2.default.renderToStaticMarkup(option.htmlContent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinfobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, option));\n\t\t\t\t\t\t\tinfobox[infoboxCreateType][infoboxIndex].setMap(map[mapReference]);\n\t\t\t\t\t\t\tif (infoboxes[infoboxIndex].addHandler) {\n\t\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxIndex], infoboxes[infoboxIndex].addHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t\t}.bind(this, infoboxes[infoboxIndex].addHandler.callback, infoboxes[infoboxIndex].addHandler.callbackData));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setInfoboxesWithPushPins',\n\t\tvalue: function setInfoboxesWithPushPins(infoboxesWithPushPins, infoboxCreateType, mapReference) {\n\t\t\tif (map[mapReference] && infoboxesWithPushPins) {\n\t\t\t\t//Remove existing Infoboxes\n\t\t\t\tvar i;\n\t\t\t\tfor (i = 0; infobox[infoboxCreateType] && i < infobox[infoboxCreateType].length; i++) {\n\t\t\t\t\tinfobox[infoboxCreateType][i].setMap(null);\n\t\t\t\t}\n\n\t\t\t\t//Remove existing Pushpins\n\t\t\t\tfor (i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar pushpin = map[mapReference].entities.get(i);\n\t\t\t\t\tif (pushpin instanceof Microsoft.Maps.Pushpin) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinfobox[infoboxCreateType] = [];\n\n\t\t\t\t//Add Infoboxes with Pushpins\n\t\t\t\tif (infoboxesWithPushPins) {\n\t\t\t\t\tfor (var infoboxWithPushPinIndex = 0; infoboxWithPushPinIndex < infoboxesWithPushPins.length; infoboxWithPushPinIndex++) {\n\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].location) {\n\t\t\t\t\t\t\t//Set Location\n\t\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(infoboxesWithPushPins[infoboxWithPushPinIndex].location[0], infoboxesWithPushPins[infoboxWithPushPinIndex].location[1]);\n\n\t\t\t\t\t\t\t//Set Infobox Option\n\t\t\t\t\t\t\tvar infoboxOption = infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxOption : null;\n\n\t\t\t\t\t\t\t//ConvertToHtml if Obj\n\t\t\t\t\t\t\tif (infoboxOption.htmlContent) {\n\t\t\t\t\t\t\t\tinfoboxOption.htmlContent = _server2.default.renderToStaticMarkup(infoboxOption.htmlContent);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//If Handler added, initially hide Infobox\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n\t\t\t\t\t\t\t\tinfoboxOption[\"visible\"] = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set Pushpin Option\n\t\t\t\t\t\t\tvar pushPinOption = infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption ? infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinOption : null;\n\n\t\t\t\t\t\t\t//Initilize if anchor for Pushpin\n\t\t\t\t\t\t\tif (pushPinOption.anchor && pushPinOption.anchor[0] && pushPinOption.anchor[1]) {\n\t\t\t\t\t\t\t\tpushPinOption.anchor = new Microsoft.Maps.Point(pushPinOption.anchor[0], pushPinOption.anchor[1]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set Infobox\n\t\t\t\t\t\t\tinfobox[infoboxCreateType].push(new Microsoft.Maps.Infobox(location, infoboxOption));\n\t\t\t\t\t\t\tinfobox[infoboxCreateType][infoboxWithPushPinIndex].setMap(map[mapReference]);\n\n\t\t\t\t\t\t\t//Set Infobox Callback if any\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler) {\n\t\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t\t}.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].infoboxAddHandler.callbackData));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set Pushpin\t\t\t\t\n\t\t\t\t\t\t\tvar _pushpin2 = new Microsoft.Maps.Pushpin(location, pushPinOption);\n\t\t\t\t\t\t\tmap[mapReference].entities.push(_pushpin2);\n\n\t\t\t\t\t\t\t//Set Pushpin Callback if any\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler) {\n\t\t\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(_pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.type, function (callback, data) {\n\t\t\t\t\t\t\t\t\tthis.MakeCallback(callback, data);\n\t\t\t\t\t\t\t\t}.bind(this, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callback, infoboxesWithPushPins[infoboxWithPushPinIndex].pushPinAddHandler.callbackData));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Set InfoboxesWithPushPins handler if any\n\t\t\t\t\t\t\tif (infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler) {\n\t\t\t\t\t\t\t\tthis.setInfoboxesWithPushPinsHandler(infobox[infoboxCreateType][infoboxWithPushPinIndex], _pushpin2, infoboxesWithPushPins[infoboxWithPushPinIndex].addHandler);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setGetLocation',\n\t\tvalue: function setGetLocation(getLocation, mapReference) {\n\t\t\tif (map[mapReference] && getLocation) {\n\t\t\t\tif (getLocation.addHandler) {\n\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], getLocation.addHandler, function (callback, e) {\n\t\t\t\t\t\tif (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n\t\t\t\t\t\t\tvar point = new Microsoft.Maps.Point(e.getX(), e.getY());\n\t\t\t\t\t\t\tvar location = e.target.tryPixelToLocation(point);\n\t\t\t\t\t\t\tthis.MakeCallback(callback, location);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this, getLocation.callback));\n\t\t\t\t} else {\n\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n\t\t\t\t\t\tif (typeof e.getX !== \"undefined\" && typeof e.getY !== \"undefined\") {\n\t\t\t\t\t\t\tvar point = new Microsoft.Maps.Point(e.getX(), e.getY());\n\t\t\t\t\t\t\tvar location = e.target.tryPixelToLocation(point);\n\t\t\t\t\t\t\tthis.MakeCallback(callback, location);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.MakeCallback(callback, \"Event: \" + getLocation.addHandler);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this, getLocation.callback));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setInfoboxesWithPushPinsHandler',\n\t\tvalue: function setInfoboxesWithPushPinsHandler(infobox, pushpin, addHandler, mapReference) {\n\t\t\tif (addHandler === \"mouseover\") {\n\t\t\t\tMicrosoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n\t\t\t\t\tinfobox.setOptions({ visible: true });\n\t\t\t\t});\n\t\t\t\tMicrosoft.Maps.Events.addHandler(pushpin, \"mouseout\", function () {\n\t\t\t\t\tinfobox.setOptions({ visible: false });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tMicrosoft.Maps.Events.addHandler(pushpin, addHandler, function () {\n\t\t\t\t\tinfobox.setOptions({ visible: true });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'MakeCallback',\n\t\tvalue: function MakeCallback(callback, data, mapReference) {\n\t\t\tdata ? callback(data) : callback();\n\t\t}\n\t}, {\n\t\tkey: 'createRegularPolygons',\n\t\tvalue: function createRegularPolygons(regularPolygons, mapReference) {\n\t\t\tif (map[mapReference] && regularPolygons) {\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar regularPolygon = map[mapReference].entities.get(i);\n\t\t\t\t\tif (regularPolygon instanceof Microsoft.Maps.Polygon) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var regularPolygonIndex = 0; regularPolygonIndex < regularPolygons.length; regularPolygonIndex++) {\n\t\t\t\t\tif (regularPolygons[regularPolygonIndex].center && regularPolygons[regularPolygonIndex].center[0] && regularPolygons[regularPolygonIndex].center[1]) {\n\t\t\t\t\t\t(function () {\n\t\t\t\t\t\t\tvar location = new Microsoft.Maps.Location(regularPolygons[regularPolygonIndex].center[0], regularPolygons[regularPolygonIndex].center[1]);\n\t\t\t\t\t\t\tvar radius = regularPolygons[regularPolygonIndex].radius ? regularPolygons[regularPolygonIndex].radius : 0;\n\t\t\t\t\t\t\tvar points = regularPolygons[regularPolygonIndex].points ? regularPolygons[regularPolygonIndex].points : 0;\n\t\t\t\t\t\t\tvar option = regularPolygons[regularPolygonIndex].option ? regularPolygons[regularPolygonIndex].option : {};\n\n\t\t\t\t\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.SpatialMath', function () {\n\t\t\t\t\t\t\t\tvar locations = Microsoft.Maps.SpatialMath.getRegularPolygon(location, radius, points, Microsoft.Maps.SpatialMath.DistanceUnits.Miles);\n\t\t\t\t\t\t\t\tvar polygon = new Microsoft.Maps.Polygon(locations, option);\n\t\t\t\t\t\t\t\tmap[mapReference].entities.push(polygon);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setBoundary',\n\t\tvalue: function setBoundary(boundary, mapReference) {\n\t\t\tif (map[mapReference] && boundary) {\n\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar regularPolygon = map[mapReference].entities.get(i);\n\t\t\t\t\tif (regularPolygon instanceof Microsoft.Maps.Polygon) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// var boundaryLocation;\n\t\t\t\t// if(boundary.option && \n\t\t\t\t// \tboundary.option.entityType && \n\t\t\t\t// \t\t!(boundary.option.entityType.includes(\"Postcode\"))){\n\t\t\t\t// \tboundaryLocation = new Microsoft.Maps.Location(boundary.location[0], boundary.location[1]);\n\t\t\t\t// }\n\t\t\t\t// else{\n\t\t\t\t// \tboundaryLocation = boundary.location\n\t\t\t\t// }\n\n\t\t\t\tvar boundaryLocation = boundary.location ? boundary.location : null;\n\n\t\t\t\tvar geoDataRequestOptions = boundary.option ? boundary.option : {};\n\t\t\t\tvar polygonStyle = boundary.polygonStyle ? boundary.polygonStyle : null;\n\t\t\t\tvar search = boundary.search ? boundary.search : null;\n\t\t\t\tif (!search && boundaryLocation) {\n\t\t\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.SpatialDataService', function () {\n\t\t\t\t\t\tMicrosoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(boundaryLocation, geoDataRequestOptions, map[mapReference], function (data) {\n\t\t\t\t\t\t\tif (data.results && data.results.length > 0) {\n\t\t\t\t\t\t\t\tmap[mapReference].entities.push(data.results[0].Polygons);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, polygonStyle, function errCallback(networkStatus, statusMessage) {\n\t\t\t\t\t\t\tconsole.log(networkStatus);\n\t\t\t\t\t\t\tconsole.log(statusMessage);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tMicrosoft.Maps.loadModule(['Microsoft.Maps.SpatialDataService', 'Microsoft.Maps.Search'], function () {\n\t\t\t\t\t\tvar searchManager = new Microsoft.Maps.Search.SearchManager(map[mapReference]);\n\t\t\t\t\t\tvar geocodeRequest = {\n\t\t\t\t\t\t\twhere: search,\n\t\t\t\t\t\t\tcallback: function callback(geocodeResult) {\n\t\t\t\t\t\t\t\tif (geocodeResult && geocodeResult.results && geocodeResult.results.length > 0) {\n\t\t\t\t\t\t\t\t\tmap[mapReference].setView({ bounds: geocodeResult.results[0].bestView });\n\t\t\t\t\t\t\t\t\tMicrosoft.Maps.SpatialDataService.GeoDataAPIManager.getBoundary(geocodeResult.results[0].location, geoDataRequestOptions, map[mapReference], function (data) {\n\t\t\t\t\t\t\t\t\t\tif (data.results && data.results.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\tmap[mapReference].entities.push(data.results[0].Polygons);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, polygonStyle, function errCallback(networkStatus, statusMessage) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(networkStatus);\n\t\t\t\t\t\t\t\t\t\tconsole.log(statusMessage);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsearchManager.geocode(geocodeRequest);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapOptions',\n\t\tvalue: function setMapOptions(mapOptions, mapReference) {\n\t\t\tif (map[mapReference] && mapOptions) {\n\t\t\t\tmap[mapReference].setOptions(mapOptions);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setPolyline',\n\t\tvalue: function setPolyline(polyline, mapReference) {\n\t\t\tif (map[mapReference] && polyline) {\n\n\t\t\t\tfor (var i = map[mapReference].entities.getLength() - 1; i >= 0; i--) {\n\t\t\t\t\tvar ref = map[mapReference].entities.get(i);\n\t\t\t\t\tif (ref instanceof Microsoft.Maps.Polyline) {\n\t\t\t\t\t\tmap[mapReference].entities.removeAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar polylineLocations = polyline.location ? polyline.location : null;\n\t\t\t\tvar polylineOption = polyline.option ? polyline.option : null;\n\n\t\t\t\tvar polylineLocationsAsMapLocations = [];\n\t\t\t\tfor (var polylineLocationIndex = 0; polylineLocationIndex < polylineLocations.length && polylineLocations[polylineLocationIndex][0] && polylineLocations[polylineLocationIndex][1]; polylineLocationIndex++) {\n\t\t\t\t\tpolylineLocationsAsMapLocations.push(new Microsoft.Maps.Location(polylineLocations[polylineLocationIndex][0], polylineLocations[polylineLocationIndex][1]));\n\t\t\t\t}\n\n\t\t\t\tif (polylineLocationsAsMapLocations.length !== 0) {\n\t\t\t\t\tvar polylineObject = new Microsoft.Maps.Polyline(polylineLocationsAsMapLocations, polylineOption);\n\t\t\t\t\tmap[mapReference].entities.push(polylineObject);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setDirections',\n\t\tvalue: function setDirections(directions, mapReference) {\n\t\t\tif (map[mapReference] && directions) {\n\t\t\t\tvar inputPanel = directions.inputPanel ? directions.inputPanel : null;\n\t\t\t\tvar renderOptions = directions.renderOptions ? directions.renderOptions : null;\n\t\t\t\tvar requestOptions = directions.requestOptions ? directions.requestOptions : null;\n\t\t\t\tvar wayPoints = directions.wayPoints ? directions.wayPoints : [];\n\t\t\t\tvar wayPointsAsDirection = [];\n\n\t\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.Directions', function () {\n\t\t\t\t\tvar directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map[mapReference]);\n\t\t\t\t\tdirectionsManager.clearAll();\n\t\t\t\t\tif (inputPanel) {\n\t\t\t\t\t\tdirectionsManager.showInputPanel(inputPanel);\n\t\t\t\t\t}\n\t\t\t\t\tif (renderOptions) {\n\t\t\t\t\t\tif (renderOptions.itineraryContainer) {\n\t\t\t\t\t\t\trenderOptions.itineraryContainer = document.getElementById(renderOptions.itineraryContainer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirectionsManager.setRenderOptions(renderOptions);\n\t\t\t\t\t}\n\t\t\t\t\tif (requestOptions) {\n\t\t\t\t\t\tvar distanceUnit = requestOptions.distanceUnit ? Microsoft.Maps.Directions.DistanceUnit[requestOptions.distanceUnit] : null;\n\t\t\t\t\t\tvar routeMode = requestOptions.routeMode ? Microsoft.Maps.Directions.RouteMode[requestOptions.routeMode] : null;\n\t\t\t\t\t\tvar routeAvoidance = requestOptions.routeAvoidance ? Microsoft.Maps.Directions.RouteAvoidance[requestOptions.routeAvoidance] : null;\n\t\t\t\t\t\tvar routeOptimization = requestOptions.routeOptimization ? Microsoft.Maps.Directions.RouteOptimization[requestOptions.routeOptimization] : null;\n\t\t\t\t\t\tvar timeType = requestOptions.timeType ? Microsoft.Maps.Directions.TimeTypes[requestOptions.timeType] : null;\n\n\t\t\t\t\t\tvar vehicleSpec = requestOptions.vehicleSpec ? requestOptions.vehicleSpec : null;\n\t\t\t\t\t\tvar maxRoutes = requestOptions.maxRoutes ? requestOptions.maxRoutes : null;\n\t\t\t\t\t\tvar routeDraggable = requestOptions.routeDraggable ? requestOptions.routeDraggable : null;\n\t\t\t\t\t\tvar routeIndex = requestOptions.routeIndex ? requestOptions.routeIndex : null;\n\t\t\t\t\t\tvar time = requestOptions.time ? requestOptions.time : null;\n\n\t\t\t\t\t\tdirectionsManager.setRequestOptions(Object.assign({}, distanceUnit && { distanceUnit: distanceUnit }, maxRoutes && { maxRoutes: maxRoutes }, routeMode && { routeMode: routeMode }, routeAvoidance && { routeAvoidance: routeAvoidance }, routeOptimization && { routeOptimization: routeOptimization }, timeType && { timeType: timeType }, vehicleSpec && { vehicleSpec: vehicleSpec }, routeDraggable && { routeDraggable: routeDraggable }, routeIndex && { routeIndex: routeIndex }, time && { time: time }));\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var wayPointsIndex = 0; wayPointsIndex < wayPoints.length; wayPointsIndex++) {\n\t\t\t\t\t\tvar address = wayPoints[wayPointsIndex].address ? wayPoints[wayPointsIndex].address : null;\n\t\t\t\t\t\tvar location = wayPoints[wayPointsIndex].location && wayPoints[wayPointsIndex].location[0] && wayPoints[wayPointsIndex].location[1] ? new Microsoft.Maps.Location(wayPoints[wayPointsIndex].location[0], wayPoints[wayPointsIndex].location[1]) : null;\n\t\t\t\t\t\tvar isViaPoint = wayPoints[wayPointsIndex].isViaPoint ? wayPoints[wayPointsIndex].isViaPoint : null;\n\n\t\t\t\t\t\twayPointsAsDirection.push(new Microsoft.Maps.Directions.Waypoint({\n\t\t\t\t\t\t\taddress: address,\n\t\t\t\t\t\t\tlocation: location,\n\t\t\t\t\t\t\tisViaPoint: isViaPoint\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tif (wayPointsAsDirection.length !== 0) {\n\t\t\t\t\t\tfor (var wayPointsAsDirectionIndex = 0; wayPointsAsDirectionIndex < wayPointsAsDirection.length; wayPointsAsDirectionIndex++) {\n\t\t\t\t\t\t\tdirectionsManager.addWaypoint(wayPointsAsDirection[wayPointsAsDirectionIndex]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirectionsManager.calculateDirections();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setMapHandlers',\n\t\tvalue: function setMapHandlers(mapHandlers, mapReference) {\n\t\t\tif (map[mapReference] && mapHandlers) {\n\t\t\t\tfor (var mapHandlerIndex = 0; mapHandlerIndex < mapHandlers.length; mapHandlerIndex++) {\n\t\t\t\t\tvar mapHandler = mapHandlers[mapHandlerIndex];\n\t\t\t\t\tif (mapHandler.addHandler) {\n\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], mapHandler.addHandler, function (callback, e) {\n\t\t\t\t\t\t\tvar callbackData = {\n\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\tmap: map[mapReference]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.MakeCallback(callback, callbackData);\n\t\t\t\t\t\t}.bind(this, mapHandler.callback));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMicrosoft.Maps.Events.addHandler(map[mapReference], \"click\", function (callback, e) {\n\t\t\t\t\t\t\tvar callbackData = {\n\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\tmap: map[mapReference]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.MakeCallback(callback, callbackData);\n\t\t\t\t\t\t}.bind(this, mapHandler.callback));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn _react2.default.createElement('div', { id: this.props.id, className: (0, _classnames2.default)('react-bingmaps', this.props.className) });\n\t\t}\n\t}]);\n\n\treturn ReactBingmaps;\n}(_react.Component);\n\nexports.default = ReactBingmaps;\n\n\nReactBingmaps.propTypes = {\n\tbingmapKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\tcenter: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\tmapTypeId: _propTypes2.default.string,\n\tnavigationBarMode: _propTypes2.default.string,\n\tsupportedMapTypes: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\theading: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\tzoom: _propTypes2.default.number,\n\tpushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\toption: _propTypes2.default.object,\n\t\taddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t})\n\t})),\n\tdisableStreetside: _propTypes2.default.bool,\n\tinfoboxes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\toption: _propTypes2.default.object,\n\t\taddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t})\n\t})),\n\tinfoboxesWithPushPins: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\taddHandler: _propTypes2.default.string,\n\t\tinfoboxOption: _propTypes2.default.object,\n\t\tpushPinOption: _propTypes2.default.object,\n\t\tinfoboxAddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t}),\n\t\tpushPinAddHandler: _propTypes2.default.shape({\n\t\t\t\"type\": _propTypes2.default.string,\n\t\t\t\"callback\": _propTypes2.default.func\n\t\t})\n\t})),\n\tgetLocation: _propTypes2.default.object,\n\tregularPolygons: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tcenter: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t\tradius: _propTypes2.default.number,\n\t\tpoints: _propTypes2.default.number,\n\t\toption: _propTypes2.default.object\n\t})),\n\tboundary: _propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n\t\toption: _propTypes2.default.object,\n\t\tpolygonStyle: _propTypes2.default.object,\n\t\tsearch: _propTypes2.default.string\n\t}),\n\tmapOptions: _propTypes2.default.object,\n\tpolyline: _propTypes2.default.shape({\n\t\tlocation: _propTypes2.default.arrayOf(_propTypes2.default.arrayOf(_propTypes2.default.number)),\n\t\toption: _propTypes2.default.object\n\t}),\n\tdirections: _propTypes2.default.object,\n\tmapHandlers: _propTypes2.default.arrayOf(_propTypes2.default.object)\n};\nReactBingmaps.defaultProps = {\n\tbingmapKey: undefined,\n\tcenter: undefined,\n\tmapTypeId: undefined,\n\tnavigationBarMode: undefined,\n\tsupportedMapTypes: undefined,\n\theading: 0,\n\tpushPins: undefined,\n\tdisableStreetside: true,\n\tinfoboxes: undefined,\n\tinfoboxesWithPushPins: undefined,\n\tzoom: undefined,\n\tgetLocation: undefined,\n\tregularPolygons: undefined,\n\tboundary: undefined,\n\tmapOptions: undefined,\n\tpolyline: undefined,\n\tdirections: undefined,\n\tmapHandlers: undefined\n};"]},"metadata":{},"sourceType":"script"}